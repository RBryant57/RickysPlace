using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

using ShootingManager.Entities.Models;

namespace ShootingManager.EFData.Mapping
{
    public class CartridgeLoadViewMap : EntityTypeConfiguration<CartridgeLoadView>
    {
        public CartridgeLoadViewMap()
        {
            // Table & Column Mappings
            this.ToTable("CartridgeLoadView");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.Name).HasColumnName("Name");
            this.Property(t => t.CartridgeLoadName).HasColumnName("CartridgeLoadName");
            this.Property(t => t.CaliberId).HasColumnName("CaliberId");
            this.Property(t => t.CaliberViewName).HasColumnName("CaliberViewName");
            this.Property(t => t.CaliberViewDiameter).HasColumnName("CaliberViewDiameter");
            this.Property(t => t.CaliberViewDiameterUnitId).HasColumnName("CaliberViewDiameterUnitId");
            this.Property(t => t.CaliberViewDiameterUnitViewName).HasColumnName("CaliberViewDiameterUnitViewName");
            this.Property(t => t.CaliberViewDiameterUnitViewPlural).HasColumnName("CaliberViewDiameterUnitViewPlural");
            this.Property(t => t.CaliberViewDiameterUnitViewAbbreviation).HasColumnName("CaliberViewDiameterUnitViewAbbreviation");
            this.Property(t => t.CaliberViewDiameterUnitViewUnitTypeId).HasColumnName("CaliberViewDiameterUnitViewUnitTypeId");
            this.Property(t => t.CaliberViewDiameterUnitViewUnitTypeName).HasColumnName("CaliberViewDiameterUnitViewUnitTypeName");
            this.Property(t => t.CaliberViewDiameterUnitViewUnitTypeNotes).HasColumnName("CaliberViewDiameterUnitViewUnitTypeNotes");
            this.Property(t => t.CaliberViewDiameterUnitViewNotes).HasColumnName("CaliberViewDiameterUnitViewNotes");
            this.Property(t => t.CaliberViewPrimerTypeId).HasColumnName("CaliberViewPrimerTypeId");
            this.Property(t => t.CaliberViewPrimerTypeName).HasColumnName("CaliberViewPrimerTypeName");
            this.Property(t => t.CaliberViewPrimerTypeAbbreviation).HasColumnName("CaliberViewPrimerTypeAbbreviation");
            this.Property(t => t.CaliberViewPrimerTypeNotes).HasColumnName("CaliberViewPrimerTypeNotes");
            this.Property(t => t.CaliberViewSortOrder).HasColumnName("CaliberViewSortOrder");
            this.Property(t => t.CaliberViewNotes).HasColumnName("CaliberViewNotes");
            this.Property(t => t.BulletId).HasColumnName("BulletId");
            this.Property(t => t.BulletViewName).HasColumnName("BulletViewName");
            this.Property(t => t.BulletViewBulletName).HasColumnName("BulletViewBulletName");
            this.Property(t => t.BulletViewBulletFullName).HasColumnName("BulletViewBulletFullName");
            this.Property(t => t.BulletViewBulletTypeId).HasColumnName("BulletViewBulletTypeId");
            this.Property(t => t.BulletViewBulletTypeName).HasColumnName("BulletViewBulletTypeName");
            this.Property(t => t.BulletViewBulletTypeAbbreviation).HasColumnName("BulletViewBulletTypeAbbreviation");
            this.Property(t => t.BulletViewBulletTypeNotes).HasColumnName("BulletViewBulletTypeNotes");
            this.Property(t => t.BulletViewMaterialId).HasColumnName("BulletViewMaterialId");
            this.Property(t => t.BulletViewMaterialName).HasColumnName("BulletViewMaterialName");
            this.Property(t => t.BulletViewMaterialNotes).HasColumnName("BulletViewMaterialNotes");
            this.Property(t => t.BulletViewDiameter).HasColumnName("BulletViewDiameter");
            this.Property(t => t.BulletViewDiameterUnitId).HasColumnName("BulletViewDiameterUnitId");
            this.Property(t => t.BulletViewDiameterUnitViewName).HasColumnName("BulletViewDiameterUnitViewName");
            this.Property(t => t.BulletViewDiameterUnitViewPlural).HasColumnName("BulletViewDiameterUnitViewPlural");
            this.Property(t => t.BulletViewDiameterUnitViewAbbreviation).HasColumnName("BulletViewDiameterUnitViewAbbreviation");
            this.Property(t => t.BulletViewDiameterUnitViewUnitTypeId).HasColumnName("BulletViewDiameterUnitViewUnitTypeId");
            this.Property(t => t.BulletViewDiameterUnitViewUnitTypeName).HasColumnName("BulletViewDiameterUnitViewUnitTypeName");
            this.Property(t => t.BulletViewDiameterUnitViewUnitTypeNotes).HasColumnName("BulletViewDiameterUnitViewUnitTypeNotes");
            this.Property(t => t.BulletViewDiameterUnitViewNotes).HasColumnName("BulletViewDiameterUnitViewNotes");
            this.Property(t => t.BulletViewMass).HasColumnName("BulletViewMass");
            this.Property(t => t.BulletViewMassUnitId).HasColumnName("BulletViewMassUnitId");
            this.Property(t => t.BulletViewMassUnitViewName).HasColumnName("BulletViewMassUnitViewName");
            this.Property(t => t.BulletViewMassUnitViewPlural).HasColumnName("BulletViewMassUnitViewPlural");
            this.Property(t => t.BulletViewMassUnitViewAbbreviation).HasColumnName("BulletViewMassUnitViewAbbreviation");
            this.Property(t => t.BulletViewMassUnitViewUnitTypeId).HasColumnName("BulletViewMassUnitViewUnitTypeId");
            this.Property(t => t.BulletViewMassUnitViewUnitTypeName).HasColumnName("BulletViewMassUnitViewUnitTypeName");
            this.Property(t => t.BulletViewMassUnitViewUnitTypeNotes).HasColumnName("BulletViewMassUnitViewUnitTypeNotes");
            this.Property(t => t.BulletViewMassUnitViewNotes).HasColumnName("BulletViewMassUnitViewNotes");
            this.Property(t => t.BulletViewSectionalDensity).HasColumnName("BulletViewSectionalDensity");
            this.Property(t => t.BulletViewBallisticCoefficient).HasColumnName("BulletViewBallisticCoefficient");
            this.Property(t => t.BulletViewLength).HasColumnName("BulletViewLength");
            this.Property(t => t.BulletViewLengthUnitId).HasColumnName("BulletViewLengthUnitId");
            this.Property(t => t.BulletViewLengthUnitViewName).HasColumnName("BulletViewLengthUnitViewName");
            this.Property(t => t.BulletViewLengthUnitViewPlural).HasColumnName("BulletViewLengthUnitViewPlural");
            this.Property(t => t.BulletViewLengthUnitViewAbbreviation).HasColumnName("BulletViewLengthUnitViewAbbreviation");
            this.Property(t => t.BulletViewLengthUnitViewUnitTypeId).HasColumnName("BulletViewLengthUnitViewUnitTypeId");
            this.Property(t => t.BulletViewLengthUnitViewUnitTypeName).HasColumnName("BulletViewLengthUnitViewUnitTypeName");
            this.Property(t => t.BulletViewLengthUnitViewUnitTypeNotes).HasColumnName("BulletViewLengthUnitViewUnitTypeNotes");
            this.Property(t => t.BulletViewLengthUnitViewNotes).HasColumnName("BulletViewLengthUnitViewNotes");
            this.Property(t => t.BulletViewManufacturerId).HasColumnName("BulletViewManufacturerId");
            this.Property(t => t.BulletViewManufacturerName).HasColumnName("BulletViewManufacturerName");
            this.Property(t => t.BulletViewManufacturerAddress).HasColumnName("BulletViewManufacturerAddress");
            this.Property(t => t.BulletViewManufacturerCity).HasColumnName("BulletViewManufacturerCity");
            this.Property(t => t.BulletViewManufacturerState).HasColumnName("BulletViewManufacturerState");
            this.Property(t => t.BulletViewManufacturerZip).HasColumnName("BulletViewManufacturerZip");
            this.Property(t => t.BulletViewManufacturerURL).HasColumnName("BulletViewManufacturerURL");
            this.Property(t => t.BulletViewManufacturerNotes).HasColumnName("BulletViewManufacturerNotes");
            this.Property(t => t.BulletViewNotes).HasColumnName("BulletViewNotes");
            this.Property(t => t.PowderId).HasColumnName("PowderId");
            this.Property(t => t.PowderViewName).HasColumnName("PowderViewName");
            this.Property(t => t.PowderViewPowderName).HasColumnName("PowderViewPowderName");
            this.Property(t => t.PowderViewManufacturerId).HasColumnName("PowderViewManufacturerId");
            this.Property(t => t.PowderViewManufacturerName).HasColumnName("PowderViewManufacturerName");
            this.Property(t => t.PowderViewManufacturerAddress).HasColumnName("PowderViewManufacturerAddress");
            this.Property(t => t.PowderViewManufacturerCity).HasColumnName("PowderViewManufacturerCity");
            this.Property(t => t.PowderViewManufacturerState).HasColumnName("PowderViewManufacturerState");
            this.Property(t => t.PowderViewManufacturerZip).HasColumnName("PowderViewManufacturerZip");
            this.Property(t => t.PowderViewManufacturerURL).HasColumnName("PowderViewManufacturerURL");
            this.Property(t => t.PowderViewManufacturerNotes).HasColumnName("PowderViewManufacturerNotes");
            this.Property(t => t.PowderViewPowderTypeId).HasColumnName("PowderViewPowderTypeId");
            this.Property(t => t.PowderViewPowderTypeName).HasColumnName("PowderViewPowderTypeName");
            this.Property(t => t.PowderViewPowderTypeNotes).HasColumnName("PowderViewPowderTypeNotes");
            this.Property(t => t.PowderViewPowderShapeId).HasColumnName("PowderViewPowderShapeId");
            this.Property(t => t.PowderViewPowderShapeName).HasColumnName("PowderViewPowderShapeName");
            this.Property(t => t.PowderViewPowderShapeNotes).HasColumnName("PowderViewPowderShapeNotes");
            this.Property(t => t.PowderViewNotes).HasColumnName("PowderViewNotes");
            this.Property(t => t.PowderWeight).HasColumnName("PowderWeight");
            this.Property(t => t.PowderWeightUnitId).HasColumnName("PowderWeightUnitId");
            this.Property(t => t.PowderWeightUnitViewName).HasColumnName("PowderWeightUnitViewName");
            this.Property(t => t.PowderWeightUnitViewPlural).HasColumnName("PowderWeightUnitViewPlural");
            this.Property(t => t.PowderWeightUnitViewAbbreviation).HasColumnName("PowderWeightUnitViewAbbreviation");
            this.Property(t => t.PowderWeightUnitViewUnitTypeId).HasColumnName("PowderWeightUnitViewUnitTypeId");
            this.Property(t => t.PowderWeightUnitViewUnitTypeName).HasColumnName("PowderWeightUnitViewUnitTypeName");
            this.Property(t => t.PowderWeightUnitViewUnitTypeNotes).HasColumnName("PowderWeightUnitViewUnitTypeNotes");
            this.Property(t => t.PowderWeightUnitViewNotes).HasColumnName("PowderWeightUnitViewNotes");
            this.Property(t => t.COL).HasColumnName("COL");
            this.Property(t => t.COLUnitId).HasColumnName("COLUnitId");
            this.Property(t => t.COLUnitViewName).HasColumnName("COLUnitViewName");
            this.Property(t => t.COLUnitViewPlural).HasColumnName("COLUnitViewPlural");
            this.Property(t => t.COLUnitViewAbbreviation).HasColumnName("COLUnitViewAbbreviation");
            this.Property(t => t.COLUnitViewUnitTypeId).HasColumnName("COLUnitViewUnitTypeId");
            this.Property(t => t.COLUnitViewUnitTypeName).HasColumnName("COLUnitViewUnitTypeName");
            this.Property(t => t.COLUnitViewUnitTypeNotes).HasColumnName("COLUnitViewUnitTypeNotes");
            this.Property(t => t.COLUnitViewNotes).HasColumnName("COLUnitViewNotes");
            this.Property(t => t.Velocity).HasColumnName("Velocity");
            this.Property(t => t.VelocityUnitId).HasColumnName("VelocityUnitId");
            this.Property(t => t.VelocityUnitViewName).HasColumnName("VelocityUnitViewName");
            this.Property(t => t.VelocityUnitViewPlural).HasColumnName("VelocityUnitViewPlural");
            this.Property(t => t.VelocityUnitViewAbbreviation).HasColumnName("VelocityUnitViewAbbreviation");
            this.Property(t => t.VelocityUnitViewUnitTypeId).HasColumnName("VelocityUnitViewUnitTypeId");
            this.Property(t => t.VelocityUnitViewUnitTypeName).HasColumnName("VelocityUnitViewUnitTypeName");
            this.Property(t => t.VelocityUnitViewUnitTypeNotes).HasColumnName("VelocityUnitViewUnitTypeNotes");
            this.Property(t => t.VelocityUnitViewNotes).HasColumnName("VelocityUnitViewNotes");
            this.Property(t => t.Pressure).HasColumnName("Pressure");
            this.Property(t => t.PressureUnitId).HasColumnName("PressureUnitId");
            this.Property(t => t.PressureUnitViewName).HasColumnName("PressureUnitViewName");
            this.Property(t => t.PressureUnitViewPlural).HasColumnName("PressureUnitViewPlural");
            this.Property(t => t.PressureUnitViewAbbreviation).HasColumnName("PressureUnitViewAbbreviation");
            this.Property(t => t.PressureUnitViewUnitTypeId).HasColumnName("PressureUnitViewUnitTypeId");
            this.Property(t => t.PressureUnitViewUnitTypeName).HasColumnName("PressureUnitViewUnitTypeName");
            this.Property(t => t.PressureUnitViewUnitTypeNotes).HasColumnName("PressureUnitViewUnitTypeNotes");
            this.Property(t => t.PressureUnitViewNotes).HasColumnName("PressureUnitViewNotes");
            this.Property(t => t.Notes).HasColumnName("Notes");
        }
    }
}
