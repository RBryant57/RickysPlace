@model ShootingManager.Web.ViewModels.BrassViewModel
    @using ShootingManager.Entities.Models;

@{
    ViewBag.Title = "Delete Brass";
}
<head>
    <title>Shooting Manager: Delete Brass - @(((Brass)@Model.Entity).Name)</title>
</head>
<div class="container">
    <div class="row">
        @Html.ActionLink("Shooting Manager Home", "Index", "Home", null, new { @class = "NavLinkStyle" }) | @Html.ActionLink("Shooting Manager Items", "Index", "Item", null, new { @class = "NavLinkStyle" }) | @Html.ActionLink("Brass Index", "Index", "Brass", null, new { @class = "NavLinkStyle" })
    </div>

    <h2>Delete Brass</h2>

    <h3>Are you sure you want to delete this brass?</h3>

    @using (Html.BeginForm("Delete", "Brass", FormMethod.Post, new { @class = "grid-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
	        <hr />
            <br />

            <fieldset>

                <legend>Basic Information</legend>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => ((Brass)model.Entity).Name, "Name:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-2">
                            @Html.DisplayFor(model => ((Brass)model.Entity).Name)
                        </div>
                    </div>
                </div>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => model.EntityView.CaliberViewName, "Caliber:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => model.EntityView.CaliberViewName)
                        </div>
                    </div>
                </div>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => ((Brass)model.Entity).ParentId, "Parent Brass:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-2">
                            @Html.DisplayFor(model => model.EntityView.ParentBrassFullName)
                        </div>
                    </div>
                </div>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.Label("Brass Length:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => ((Brass)model.Entity).Length)
                            @Html.DisplayFor(model => model.EntityView.LengthUnitViewName)
                        </div>
                    </div>
                </div>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => model.EntityView.MaterialName, "Material:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => model.EntityView.MaterialName)
                        </div>
                    </div>
                </div>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => model.EntityView.ManufacturerName, "Manufacturer:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => model.EntityView.ManufacturerName)
                        </div>
                    </div>
                </div>
    
                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => ((Brass)model.Entity).TimesFired, "Times Fired:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => ((Brass)model.Entity).TimesFired)
                        </div>
                    </div>
                </div>

            </fieldset>

            <fieldset>

                <br />
                <br />
                <legend>Optional Information</legend>

                <div class="form-group" data-row-span="1">
                    <div data-field-span="1">
                        @Html.LabelFor(model => ((Brass)model.Entity).Notes, "Notes:", new { @class = "control-label col-md-3" })
                        <div class="control-label col-md-1">
                            @Html.DisplayFor(model => ((Brass)model.Entity).Notes)
                        </div>
                    </div>
                </div>

            </fieldset>

            <br />
            <hr />
        </div>

        <div class="col-md-offset-2 col-md-10">
            @{if (Model.CanDelete)
                {
                    <input type="submit" value="Delete" class="btn-style" />
                }
                else
                {
                    <input type="submit" value="Delete" class="btn-styledisabled" disabled title="This brass cannot be deleted since it is used in cartridges." />
                }
            }
        </div>
                }
</div>