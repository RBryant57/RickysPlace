@model ShootingManager.Web.ViewModels.CaliberViewModel
@using ShootingManager.Entities.Models;

@{
    ViewBag.Title = "Caliber Details";
}
<head>
    <title>Shooting Manager: Caliber Details - @(((Caliber)@Model.Entity).Name)</title>
</head>
<div class="container">

    <div class="row">
        @Html.ActionLink("Shooting Manager Home", "Index", "Home", null, new { @class = "NavLinkStyle" }) | @Html.ActionLink("Shooting Manager Items", "Index", "Item", null, new { @class = "NavLinkStyle" }) | @Html.ActionLink("Caliber Index", "Index", "Caliber", null, new { @class = "NavLinkStyle" })
    </div>

    <h2>Caliber Details</h2>

    <div>

	    @using (Html.BeginForm("Edit", "Caliber", FormMethod.Post, new { id = ((Caliber)Model.Entity).Id, @class = "grid-form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            <br />
            <div class="form-horizontal">

                <fieldset>
        
                    <legend>Basic Information</legend>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).Name, "Name:", new { @class = "control-label col-md-2" })
                            <div class="control-label-left col-md-3">
                                @Html.DisplayFor(model => ((Caliber)Model.Entity).Name)
                            </div>
                        </div>
                    </div>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).Diameter, "Diameter:", new { @class = "control-label col-md-2" })
                            <div class="control-label-left col-md-3">
                                @{
                                    string parameterValue = ((Caliber)Model.Entity).Diameter.ToString();
                                }
                                @Html.DisplayFor(model => parameterValue)
                                &nbsp;
                                @Html.DisplayFor(model => model.EntityView.DiameterUnitViewAbbreviation)
                            </div>
                        </div>
                    </div>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).BrassLength, "Brass Length:", new { @class = "control-label col-md-2" })
                            <div class="control-label-left col-md-3">
                                @{
                                    string brassLengthParameterValue = ((Caliber)Model.Entity).BrassLength.ToString();
                                }
                                @Html.DisplayFor(model => brassLengthParameterValue)
                                &nbsp;
                                @Html.DisplayFor(model => model.EntityView.BrassLengthUnitViewAbbreviation)
                            </div>
                        </div>
                    </div>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).SortOrder, "Sort Order:", new { @class = "control-label col-md-2" })
                            <div class="control-label-left col-md-1">
                                @Html.DisplayFor(model => ((Caliber)Model.Entity).SortOrder)
                            </div>
                        </div>
                    </div>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).PrimerType, "Primer Type:", new { @class = "control-label col-md-2" })
                            <div class="control-label-left col-md-1">
                                @Html.ActionLink(Model.EntityView.PrimerTypeAbbreviation, "Details", "PrimerType", new { id = ((Caliber)Model.Entity).PrimerTypeId }, new { @class = "EditLinkStyle" })
                            </div>
                        </div>
                    </div>

                </fieldset>

                <fieldset>

                    <br />
                    <br />
                    <legend>Optional Information</legend>

                    <div class="form-group" data-row-span="1">
                        <div data-field-span="1">
                            @Html.LabelFor(model => ((Caliber)Model.Entity).Notes, "Notes:",  new { @class = "control-label col-md-2" })
                            <div class="control-label col-md-1">
                                @Html.DisplayFor(model => ((Caliber)Model.Entity).Notes)
                            </div>
                        </div>
                    </div>

                </fieldset>

                <br />
                <hr />
            </div>

        }
    </div>

    <div class="col-md-offset-2 col-md-10">
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = ((Caliber)Model.Entity).Id }, new { @class = "btn-style" })
        </p>
    </div>

</div>